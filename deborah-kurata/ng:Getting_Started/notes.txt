- First Things First 
    - Selecting Language 
        - ES5 
            - Runs in the browser 
            - No Compile required 
        - ES 2015 
            - Lots of new features [ classes, let, arrow, etc....]
        - Typescript 
            - Superset of Javascript 
            - Strong typing 
            - Great IDE tooling 
            - Open Source Language
            - Class-based object-orientation 
            - Transpiles to plain Javascript
        - Dart 
            - No Javascript
    - Modules 
        - ES Modules
            - Code files that import or export something 
            - Organize our code files 
            - Modularize our code 
            - Promorte code reuse 
        - Angular Modules 
            - Code files that Organize the application into 
                cohesive blocks of functionality 
            - Organize our application
            - Modularize our application
            - Promorte application boundaries 
- Component 
    - Template 
        - Veiw layout 
        - Created with HTML
        - Includes binding and directives 
    - Class [ Properties, Methods ]
        - Code supporting the view 
        - Created with Typescript
        - Properties: data 
        - Methods: logic 
    - Metadata 
        - Extra data for Angular 
        - is defained with a decorator, which is a function that add metadata to 
            a class it's members, or its method arguments 
    - Component is a view defained in a template, it's associated code defained with a class, 
        and metadata defained with a decorator.
    - Decorator 
        - A function that adds metadata to a class, its members, or its method arguments 
        - Prefixed with an @ 

- Binding, Coordinates communicatiion btw the component's class 
    and it's template and often involves passsing data.
    - Interpolation [one way databinding]
        - <h1>{{pageTemplete}}</h1>
        - <h1 innerHTML="{{pageTemplete}}"></h1>
        - From Component Class property to an element property
- Directives
    - Custom HTML element or attribute used to power up and extend our HTML.
- Data Binding & Pipes 
    - property binding 
        * <img [src]="product.imageUrl"></img>
        * <img src={{product.imageUrl}}></img>
        * <img src='https://www.mohammedelzanaty.com/{{product.imageUrl}}'></img>
    - event binding 
        * <button (click)="toggleSomething()"></button>
    - two way data binding 
        * [(ngModel)]=''
    - Pipes 
        * Transform bound Properties before display 
        * Built-in pipes 
            - data
            - number, decimal, percent, currency 
            - json, slice 
        * Custom pipe
- Interface 
    - A specification identifying a realted set of properties and methods. 
    - A class commits to supporting the specification by implemmenting the interface.
    - Use an interface as DATA_TYPE

- Compoent Life Cycle 
    - [Create, Render, Create and Render Children, Process Changes, Destroy]
    - Angular creates it, renders it, creates and renders its children, checks it when its data-bound properties change, and destroys it before removing it from the DOM.
    - Angular only calls a directive/component hook method if it is defined.
    - OnInit    : Perform component initialization, retrieve data  
    - OnChange  : Perform actions after change to input properties
    - OnDestroy : Perform cleanup

- 

 
